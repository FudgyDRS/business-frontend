{"version":3,"file":"static/js/758.45c042c7.chunk.js","mappings":"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","sources":["components/scroll-to-top/index.jsx","components/section-title/index.jsx","components/seo/index.jsx","components/newsletter/index.jsx","containers/global/newsletter/index.jsx","components/page-banner-image/index.jsx","components/page-title/index.jsx","containers/global/page-banner/index.jsx","components/team-card/index.jsx","containers/team-page-container/index.jsx","pages/team.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst ScrollToTop = (props) => {\n    const [stick, setStick] = useState(false);\n    const onClickHandler = () => {\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n    };\n\n    useEffect(() => {\n        var position = window.pageYOffset;\n\n        const scrollHandler = () => {\n            let scrollPos = window.pageYOffset;\n            if (scrollPos < 200) {\n                setStick(false);\n            } else if (scrollPos < position) {\n                setStick(true);\n            } else {\n                setStick(false);\n            }\n            position = scrollPos;\n        };\n\n        window.addEventListener(\"scroll\", function () {\n            scrollHandler();\n        });\n        return () => {\n            window.removeEventListener(\"scroll\", function () {\n                scrollHandler();\n            });\n        };\n    }, [stick]);\n\n    return (\n        <button\n            type=\"button\"\n            className={`scroll-to-top ${stick ? \"show\" : \"\"}`}\n            onClick={onClickHandler}\n            {...props}\n        >\n            <i className=\"arrow-top icofont-long-arrow-up\"></i>\n            <i className=\"arrow-bottom icofont-long-arrow-up\"></i>\n        </button>\n    );\n};\n\nexport default ScrollToTop;\n","import PropTypes from \"prop-types\";\n\nconst SectionTitle = ({\n    subTitle,\n    title,\n    excerpt,\n    classOption,\n    excerptClassOption,\n}) => {\n    return (\n        <div className={`title-section ${classOption}`}>\n            <span className=\"sub-title\">{subTitle}</span>\n            <h3\n                className=\"title\"\n                dangerouslySetInnerHTML={{ __html: title }}\n            ></h3>\n            <p\n                className={`${excerptClassOption}`}\n                dangerouslySetInnerHTML={{ __html: excerpt }}\n            ></p>\n        </div>\n    );\n};\n\nSectionTitle.propTypes = {\n    subTitle: PropTypes.string,\n    title: PropTypes.string,\n    excerpt: PropTypes.string,\n    classOption: PropTypes.string,\n    excerptClassOption: PropTypes.string,\n};\nSectionTitle.defaultProps = {\n    classOption: \"section-title\",\n};\n\nexport default SectionTitle;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nconst SEO = ({ title }) => {\n    return (\n        <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>{title}</title>\n            <meta name=\"robots\" content=\"noindex, follow\" />\n            <meta\n                name=\"description\"\n                content=\"Hope â€“ Health &amp; Medical React JS Template\"\n            />\n            <meta\n                name=\"viewport\"\n                content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n            />\n        </Helmet>\n    );\n};\n\nSEO.propTypes = {\n    title: PropTypes.string,\n};\n\nexport default SEO;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\n\nconst CustomForm = ({ status, message, onValidated }) => {\n    let email;\n    const submit = (e) => {\n        e.preventDefault();\n        email &&\n            email.value.indexOf(\"@\") > -1 &&\n            onValidated({\n                EMAIL: email.value,\n            });\n        let emailInput = document.getElementById(\"mc-email\");\n        emailInput.value = \"\";\n    };\n    // Change Handaler\n    const inputChangedHandler = (e) => {\n        console.log(e.target.value);\n    };\n    return (\n        <Fragment>\n            <form className=\"news-letter-form d-flex\">\n                <input\n                    id=\"mc-email\"\n                    className=\"form-control\"\n                    type=\"email\"\n                    placeholder=\"Enter Email here\"\n                    name=\"mail\"\n                    onChange={(e) => inputChangedHandler(e)}\n                    ref={(node) => (email = node)}\n                />\n                <button className=\"search-btn\" type=\"submit\" onClick={submit}>\n                    Subscribe\n                </button>\n            </form>\n            {status === \"sending\" && (\n                <div style={{ color: \"#3498db\", fontSize: \"12px\" }}>\n                    sending...\n                </div>\n            )}\n            {status === \"error\" && (\n                <div\n                    style={{ color: \"#e74c3c\", fontSize: \"12px\" }}\n                    dangerouslySetInnerHTML={{ __html: message }}\n                />\n            )}\n            {status === \"success\" && (\n                <div\n                    style={{ color: \"#2ecc71\", fontSize: \"12px\" }}\n                    dangerouslySetInnerHTML={{ __html: message }}\n                />\n            )}\n        </Fragment>\n    );\n};\n\nCustomForm.propTypes = {\n    status: PropTypes.oneOf([\"sending\", \"error\", \"success\"]),\n    message: PropTypes.string,\n    onValidated: PropTypes.func,\n};\nconst Newsletter = (props) => {\n    return (\n        <MailchimpSubscribe\n            url={props.mailchimpUrl}\n            render={({ subscribe, status, message }) => (\n                <CustomForm\n                    status={status}\n                    message={message}\n                    onValidated={(formData) => subscribe(formData)}\n                />\n            )}\n        />\n    );\n};\n\nNewsletter.propTypes = {\n    mailchimpUrl: PropTypes.string,\n};\n\nexport default Newsletter;\n","import React from \"react\";\nimport Newsletter from \"../../../components/newsletter\";\nimport SectionTitle from \"../../../components/section-title\";\n\nconst NewsletterArea = () => {\n    return (\n        <div className=\"news-letter-section section-pb\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-7 col-xl-6 mx-auto\">\n                        <SectionTitle\n                            classOption=\"title-section mb-10 text-center\"\n                            subTitle=\"NEWSLETTER\"\n                            title=\"Subscribe <span class='text-primary'>Newsletter</span> &amp;\n                            <br class='d-none d-xl-block' />get latest update...\"\n                        />\n                    </div>\n                    <div className=\"col-xl-8 col-lg-10 mx-auto\">\n                        <Newsletter mailchimpUrl=\"//devitems.us11.list-manage.com/subscribe/post?u=6bbb9b6f5827bd842d9640c82&amp;id=05d85f18ef\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default NewsletterArea;\n","import { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Parallax from \"parallax-js\";\n\nconst PageBannerImage = ({ image }) => {\n    const sceneEl = useRef(null);\n\n    useEffect(() => {\n        const parallaxInstance = new Parallax(sceneEl.current, {\n            relativeInput: true,\n        });\n\n        parallaxInstance.enable();\n\n        return () => parallaxInstance.disable();\n    }, []);\n    return (\n        <div\n            className=\"banner-content scene banner-img\"\n            id=\"scene\"\n            ref={sceneEl}\n        >\n            <div data-depth=\"0.2\">\n                <img src={image} alt=\"img\" />\n            </div>\n        </div>\n    );\n};\n\nPageBannerImage.propTypes = {\n    image: PropTypes.string,\n};\n\nexport default PageBannerImage;\n","import PropTypes from \"prop-types\";\n\nconst PageTitle = ({ title, excerpt }) => {\n    return (\n        <div className=\"banner-content banner-padding\">\n            <h3 className=\"title\">{title}</h3>\n            <p dangerouslySetInnerHTML={{ __html: excerpt }}></p>\n        </div>\n    );\n};\n\nPageTitle.propTypes = {\n    title: PropTypes.string,\n    excerpt: PropTypes.string,\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PageBannerImage from \"../../../components/page-banner-image\";\nimport PageTitle from \"../../../components/page-title\";\n\nconst PageBanner = ({ title, excerpt, image }) => {\n    return (\n        <div className=\"banner-section position-relative\">\n            <img\n                className=\"banner-shape\"\n                src={\"/images/banner/shape1.png\"}\n                alt=\"shape\"\n            />\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <PageTitle title={title} excerpt={excerpt} />\n                    </div>\n\n                    <div className=\"col-md-6 mt-7 mt-md-0\">\n                        <PageBannerImage image={image} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPageBanner.propTypes = {\n    title: PropTypes.string,\n    excerpt: PropTypes.string,\n    image: PropTypes.string,\n};\n\nexport default PageBanner;\n","import PropTyps from \"prop-types\";\n\nconst TeamCard = ({ data }) => {\n    return (\n        <div className=\"team-card\">\n            <div className=\"thumb\">\n                <img src={data.thumb} alt=\"img\" />\n            </div>\n            <div className=\"content\">\n                <h3 className=\"title\">{data.name}</h3>\n                <span>{data.designation}</span>\n            </div>\n        </div>\n    );\n};\n\nTeamCard.propTypes = {\n    data: PropTyps.object,\n};\n\nexport default TeamCard;\n","import React from \"react\";\nimport TeamCard from \"../../components/team-card\";\nimport TeamData from \"../../data/team.json\";\n\nconst TeampPageContainer = () => {\n    return (\n        <div className=\"service-section section-py\">\n            <div className=\"container\">\n                <div className=\"row row-cols-lg-4 row-cols-md-3 row-cols-sm-2 row-cols-1 mb-n7\">\n                    {TeamData &&\n                        TeamData.map((single, key) => {\n                            return (\n                                <div\n                                    key={key}\n                                    className=\"col col-md-6 col-lg-4 col-xl-3 text-center mb-7\"\n                                >\n                                    <TeamCard key={key} data={single} />\n                                </div>\n                            );\n                        })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TeampPageContainer;\n","import React from \"react\";\nimport ScrollToTop from \"../components/scroll-to-top\";\nimport SEO from \"../components/seo\";\nimport NewsletterArea from \"../containers/global/newsletter\";\nimport PageBanner from \"../containers/global/page-banner\";\nimport TeampPageContainer from \"../containers/team-page-container\";\n//import Footer from \"../layouts/footer\";\n//import Header from \"../layouts/header\";\n//import Layout from \"../layouts/index\";\n\nconst TeamPage = () => {\n  return (\n    <div>\n      <SEO title=\"Fudgy Labs - Team\" />\n      <div className=\"wrapper\">\n        {/* <Header /> */}\n        <PageBanner\n          title=\"Our Team\"\n          excerpt=\"Pleasure rationally encounter consequences <br />\n                        are extremely painful great oppurtunity\"\n          image=\"./images/team/5.png\"\n        />\n        <TeampPageContainer />\n        <NewsletterArea />\n        {/* <Footer /> */}\n        <ScrollToTop />\n      </div>\n    </div>\n  );\n};\n\nexport default TeamPage;\n"],"names":["props","useState","stick","setStick","useEffect","position","window","pageYOffset","scrollHandler","scrollPos","addEventListener","removeEventListener","type","className","onClick","scrollTo","top","behavior","SectionTitle","subTitle","title","excerpt","classOption","excerptClassOption","dangerouslySetInnerHTML","__html","defaultProps","charSet","name","content","CustomForm","email","status","message","onValidated","Fragment","id","placeholder","onChange","e","console","log","target","value","inputChangedHandler","ref","node","preventDefault","indexOf","EMAIL","document","getElementById","style","color","fontSize","url","mailchimpUrl","render","subscribe","formData","image","sceneEl","useRef","parallaxInstance","Parallax","current","relativeInput","enable","disable","src","alt","data","thumb","designation","TeamData","single","key"],"sourceRoot":""}